class Node {
  constructor(value) {
    this.value = value
    this.left = null
    this.right = null
  }

  removeChildWithValue(val) {
    let attr = this.right && (this.right.value === val) ? "right" : "left"
    this[attr] = null;
  }

  attachNode(node) {
    if (node === null) return

    if (node.value === this.value) throw "Not Permitted"

    if (node.value === null ) {
      if (node.value < this.value) {
        this.left = node
      } else {
        this.right = node
      }
      return this
    }

    if (node.value < this.value) {
      if (this.left === null){
        this.left = node
      } else {
        this.left.attachNode(node)
      }
    } else {
      if (this.right === null) {
        this.right = node
      } else {
        this.right.attachNode(node)
      }
    }
  }
}

module.exports = Node